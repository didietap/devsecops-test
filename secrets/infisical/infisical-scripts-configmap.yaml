
apiVersion: v1
kind: ConfigMap
metadata:
  name: infisical-fetch-scripts
  namespace: devsecops
data:
  fetch-secrets.sh: |
    #!/usr/bin/env bash
    set -euo pipefail
    # Expect machine identity at /secrets/.machine.infisical.json
    ID_FILE="/secrets/.machine.infisical.json"
    OUT_FILE="/secrets/.env"

    if [ ! -f "$ID_FILE" ]; then
      echo "ERROR: Infisical machine identity not found at $ID_FILE"
      exit 2
    fi

    MACHINE_TOKEN=$(jq -r .machine_token "$ID_FILE")
    if [ -z "$MACHINE_TOKEN" ] || [ "$MACHINE_TOKEN" = "REPLACE_WITH_REAL_MACHINE_TOKEN" ]; then
      echo "ERROR: machine_token empty or placeholder in $ID_FILE"
      exit 3
    fi

    echo "üîê Fetching secrets from Infisical..."
    # NOTE: adjust API endpoint/path according to Infisical API (this is a placeholder example)
    # Replace the URL below with the correct Infisical API endpoint and parameters for your workspace/environment.
    RESPONSE=$(curl -sS -H "Authorization: Bearer $MACHINE_TOKEN" \
      "https://app.infisical.com/api/v1/secrets?environment=dev")

    if [ -z "$RESPONSE" ]; then
      echo "ERROR: empty response from Infisical"
      exit 4
    fi

    # Parse JSON response extracting key/value pairs. Adjust jq path to actual Infisical response shape.
    echo "# generated by infisical fetch script" > "$OUT_FILE"
    echo "$RESPONSE" | jq -r '.secrets[] | "\(.key)=\(.value)"' >> "$OUT_FILE"

    chmod 600 "$OUT_FILE"
    echo "‚úÖ Wrote secrets to $OUT_FILE"

  start.sh: |
    #!/usr/bin/env bash
    set -euo pipefail
    # If /secrets/.env exists, export its variables into the environment
    ENV_FILE="/secrets/.env"

    if [ -f "$ENV_FILE" ]; then
      echo "üîê Loading secrets from $ENV_FILE"
      # shellcheck disable=SC1090
      # Export each line KEY=VALUE into env for the current shell, then exec node
      # Use while-read to avoid word splitting issues
      while IFS= read -r line || [ -n "$line" ]; do
        # skip empty or comment lines
        [[ -z "$line" || "$line" =~ ^# ]] && continue
        # export key/value (safe-ish; values with quotes remain)
        export "$line"
      done < "$ENV_FILE"
    else
      echo "‚ö† No secrets file found at $ENV_FILE (continuing without Infisical secrets)"
    fi

    # Exec the actual application (replace if you need other args)
    echo "üöÄ Starting backend (node dist/main.js)"
    exec node dist/main.js
